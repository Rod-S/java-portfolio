{
  "projects": [
    {
      "id": "0",
      "project_name": "Random Quote Generator",
      "description": "Program that displays a randomly selected quote each time the user clicks a button.",
      "technologies": ["HTML", "CSS", "JavaScript"],
      "live_link": "https://codepen.io/rod-s/full/LJNgyZ/",
      "github_link": "https://github.com/Rod-S/Unit-1---Random-Quote-Generator",
      "image_urls": [
        "/images/p1/p1LP.JPG",
        "/images/p1/p1s1.JPG",
        "/images/p1/p1s2.JPG",
        "/images/p1/p1s3.JPG"
      ]
    },
    {
      "id": "1",
      "project_name": "Pagination and Content Filter",
      "description": "Creating pagination and a content filter for an overly long HTML list of students using progressively enhanced, unobtrusive JavaScript",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "live_link": "https://codepen.io/rod-s/full/dqMgJv/",
      "github_link": "https://github.com/Rod-S/Unit-2---Pagination-and-Content-Filter",
      "image_urls": [
        "/images/p2/p2LP.JPG",
        "/images/p2/p2s1.JPG",
        "/images/p2/p2s2.JPG",
        "/images/p2/p2s3.JPG"
      ]
    },
    {
      "id": "2",
      "project_name": "Interactive Form with Validation",
      "description": "Creating an interactive registration form using HTML, CSS and JavaScript with responsive user-friendly error messages and form validity.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "live_link": "https://codepen.io/rod-s/full/RYaEQW/",
      "github_link": "https://github.com/Rod-S/Unit-3---Building-an-Interactive-Form",
      "image_urls": [
        "/images/p3/p3LP.JPG",
        "/images/p3/p3s1.JPG",
        "/images/p3/p3s2.JPG",
        "/images/p3/p3s3.JPG"
      ]
    },
    {
      "id": "3",
      "project_name": "Tic-Tac-Toe Game",
      "description": "(Note: Live Demo may not display svg images properly.) A functional, two-person (or 1-player vs. program) \"Tic-Tac-Toe\" game using HTML, CSS and image files that requires players to add their names, take turns playing, and have the program announce the results of the game when it ends.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "live_link": "https://codepen.io/rod-s/full/VGagwa/",
      "github_link": "https://github.com/Rod-S/Unit-4---Tic-Tac-Toe",
      "image_urls": [
        "/images/p4/p4LP.JPG",
        "/images/p4/p4s1.JPG",
        "/images/p4/p4s2.JPG",
        "/images/p4/p4s3.JPG"
      ]
    },
    {
      "id": "4",
      "project_name": "Using a Public API to Create an Employee Directory",
      "description": "Using the Random Generator API to retrieve data for 12 random employees, and using that data to build a prototype for an employee directory.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery", "AJAX"],
      "live_link": "https://codepen.io/rod-s/full/YOqmqb/",
      "github_link": "https://github.com/Rod-S/Unit-5---Use-a-Public-API-to-Create-an-Employee-Directory",
      "image_urls": [
        "/images/p5/p5LP.JPG",
        "/images/p5/p5s1.JPG",
        "/images/p5/p5s2.JPG",
        "/images/p5/p5s3.JPG"
      ]
    },
    {
      "id": "5",
      "project_name": "Web Content Data Scraper",
      "description": "Command-line application using Node.js to scrape a web page, then store the data within a .csv file",
      "technologies": ["JavaScript", "Node.js"],
      "github_link": "https://github.com/Rod-S/Unit-6---Content-Scraper",
      "image_urls": [
        "/images/p6/p6LP.JPG",
        "/images/p6/p6s1.JPG",
        "/images/p6/p6s2.JPG",
        "/images/p6/p6s3.JPG"
      ]
    },
    {
      "id": "6",
      "project_name": "Portfolio Site",
      "description": "Portfolio site of built projects using Express and Node.js; deployed on Heroku's cloud platform",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery", "Node.js", "Express", "Pug", "Heroku Cloud Platform"],
      "github_link": "https://github.com/Rod-S/Portfolio-Site",
      "image_urls": [
        "/images/p7/p7LP.JPG",
        "/images/p7/p7s1.JPG",
        "/images/p7/p7s2.JPG",
        "/images/p7/p7s3.JPG"
      ]
    },
    {
      "id": "7",
      "project_name": "Gulp Build",
      "description": "Gulp build process with multiple file types setup for deployment",
      "technologies": ["HTML", "CSS", "JavaScript", "Node.js", "Gulp"],
      "github_link": "https://github.com/Rod-S/Unit-8---Gulp-Build",
      "image_urls": [
        "/images/p8/p8LP.JPG",
        "/images/p8/p8s1.JPG",
        "/images/p8/p8s2.JPG",
        "/images/p8/p8s3.JPG"
      ]
    },
    {
      "id": "8",
      "project_name": "Gallery App with React",
      "description": "Image gallery built with react and the Flickr API",
      "technologies": ["HTML", "CSS", "JavaScript", "Node.js", "React", "Flickr API"],
      "github_link": "https://github.com/Rod-S/Unit-9---React-Gallery-App",
      "image_urls": [
        "/images/p9/p9LP.JPG",
        "/images/p9/p9s1.JPG",
        "/images/p9/p9s2.JPG",
        "/images/p9/p9s3.JPG"
      ]
    },
    {
      "id": "9",
      "project_name": "Library Manager",
      "description": "Library Database Management application using Express, Node.js and the Sequelize SQLITE3 ORM. Application can add/manage database consisting of library books, patrons and loans.",
      "technologies": ["HTML", "Pug", "CSS", "JavaScript", "Node.js", "Express", "Sequelize", "SQLite3"],
      "github_link": "https://github.com/Rod-S/Unit-10---Library-Manager",
      "image_urls": [
        "/images/p10/p10LP.JPG",
        "/images/p10/p10s1.JPG",
        "/images/p10/p10s2.JPG",
        "/images/p10/p10s3.JPG"
      ]
    },
    {
      "id": "10",
      "project_name": "Course Rating API",
      "description": "Using express and the mongoose ODM to interact with a MongoDB database in order to create the back-end for a course rating API which lets users create, edit and rate courses. Includes authorization and authentication functionality.",
      "technologies": ["JavaScript", "Node.js", "Express", "Mongoose", "MongoDB"],
      "github_link": "https://github.com/Rod-S/Unit-11---Course-Rating-Api-With-Express",
      "image_urls": [
        "/images/p11/p11LP.png",
        "/images/p11/p11s1.png",
        "/images/p11/p11s2.png",
        "/images/p11/p11s3.png"
      ]
    },
    {
      "id": "11",
      "project_name": "The Final Frontier",
      "description": "Creating the front-end of a JavaScript web app along with the back-end managing database communication and 3 APIs. Application hosted with heroku.",
      "technologies": ["HTML", "Pug", "CSS", "Bootstrap", "JavaScript", "Node.js", "Express", "MongoDB", "Mongoose"],
      "live_site": "http://the-final-frontier.herokuapp.com",
      "github_link": "https://github.com/Rod-S/The-Final-Frontier",
      "image_urls": [
        "/images/p12/p12LP.png",
        "/images/p12/P12s1.png",
        "/images/p12/p12s2.png",
        "/images/p12/P12s3.png"
      ]
    },
    {
      "id": "12",
      "project_name": "Amazon Data Scraper",
      "description": "Command-line application using Node.js and the request package to scrape Amazon's book page then store the book data within a .json file",
      "technologies": ["JavaScript", "Node.js"],
      "github_link": "https://github.com/Rod-S/Amazon-Scraper",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },
    {
      "id": "13",
      "project_name": "SimpliWeather",
      "description": "An interactive weather forecast app that allows the user to search and view current and 7 day weather forecasts for a particular location. User can adjust forecast with interactive map pin. The app uses Open Weather Map and MapBox APIs and incorporates HTML, CSS, JS and jQuery. Pair programming with teammate.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery, MapBox API, Open Weather API"],
      "github_link": "https://github.com/Rod-S/weather-app",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },{
      "id": "14",
      "project_name": "Alamo Coffee",
      "description": "An interactive coffee shop app that allows users to search through a menu of available coffees by name and type, and also allows users to add their own coffees and roasts.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "github_link": "https://github.com/Sanati-Vidaurri/coffee-project",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },{
      "id": "15",
      "project_name": "Movie Database",
      "description": "An interactive movie database using Glitch.io's RESTful api functionality to send AJAX requests to load, update and delete movie entries and ratings.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "github_link": "https://github.com/Ellingson-Sanati/movie-app",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },{
      "id": "16",
      "project_name": "Java IO Terminal Dungeon Crawler",
      "description": "An interactive weather forecast app that allows the user to search and view current and 7 day weather forecasts for a particular location. User can adjust forecast with interactive map pin. The app uses Open Weather Map and MapBox APIs and incorporates HTML, CSS, JS and jQuery. Pair programming with teammate.",
      "technologies": ["Java"],
      "github_link": "https://github.com/Connor-Rod/Contacts-manager",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },{
      "id": "17",
      "project_name": "Ad Lister",
      "description": "An interactive ad listing application that allows users to create accounts and view their profile, view, create, update and delete their own ads to a database.",
      "technologies": ["Java", "MySQL", "MVC","Servlets", "JSP and JSTL", "JDBC", "HTML", "CSS", "JavaScript", "jQuery"],
      "github_link": "https://github.com/Ryan-Rod-Lening/Group-Java-Adlister",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    },
    {
      "id": "18",
      "project_name": "PharmHands",
      "description": "A pharmacy database manager that allows doctors, pharmacists and patients to write, view, verify and fill prescriptions. User roles implemented with Spring Security determine application workflow. PharmHands consists of front and back-end development written in HTML, JS, Materialize CSS, and Java Spring Boot. Deployed using DigitalOcean’s cloud-based servers. Our team applied a modified scrum approach, utilized a kanban board, and designed user stories and wireframes to take app live.",
      "technologies": ["Java","Spring Boot", "Spring Security", "HTML", "CSS", "Materialize","JavaScript", "jQuery"],
      "github_link": "https://github.com/Pharm-Hands/PharmHands",
      "image_urls": [
        "/images/Amazon-Scraper/AS-LP.png",
        "/images/Amazon-Scraper/AS-s1.png",
        "/images/Amazon-Scraper/AS-s2.png",
        "/images/Amazon-Scraper/AS-s4.png"
      ]
    }
  ]
}
